首页
    1 轮播
        （1）模型 ==》表==》插入数据
        （2）视图函数 查询所有的数据 渲染给页面
        （3）页面轮播 我们使用swiper这个框架(封装了js)
            只有home模块使用swiper 我们要swiper的css和js都导入到home里


闪购
    1  左栏
           模型==》表==》插入数据
           视图函数查询
           页面渲染




    2  右上
    3  右下

    （1）右上的样式改变
    toggle 切换
    （2）商品的展示
        刚进入到闪购页面的时候 是显示那些类别的商品
2张表 axffoodtype 和 axfgoods
分析这2张表有什么关系
分析得到 axffoodtype的typeid和axfgoods的categoryid相等


    （3）根据商品的类别查询商品
    （4）左栏的高亮显示

    （5）右上下拉框的展示
    将某一种商品类型的分类放到页面上
    （6）二级联动
在一级菜单的基础上查询数据

    （7）二级联动的高亮

    （8）三级联动
    （9）三级联动的高亮 点谁谁绿


我的
    (1) 我的页面的构建
    注册和登录 共用应该小黄条
    所以创建应该base_user.html
    如何 注册和登录界面都继承base_user.html
    (2) 构建注册页面
        构建注册得页面
        用户名字前端验证 输入得名字必须符合正则得要求
        所谓得前端校验就是不走数据库得验证
（一般先做前端验证 减少数据库得io操作 就是访问）
 什么时候做前端验证，如何做呢：1 当鼠标失去焦点时做前端验证

        用户名字后端验证 ajax 用户名字不能重复
        后端验证需要一个模型，注册得插入数据库
        什么时候会验证后端用户名
        是在前端通过后会去验证后端
        后端校验就是走数据库得验证

     (3)密码和确认密码得一致性
        什么情况下去验证密码和确认密码
        正常情况下 都是确认密码失去焦点之后才去验证


     (4)邮箱得验证
     将设置邮箱的授权码
     设置--smtp/imap/pop3---》授权码
     注意：授权码不能和你的密码一致
     在settings中设置参数
     EMAIL_HOST 邮箱主机 smtp.163.com
     EMAIL_PORT 端口号 25/465 阿里云服务器默认占用25 所以使用465
     EMAIL_HOST_USER 用户的地址 18502196569@163.com
     EMAIL_HOST_PASSWORD 授权码 GWTHXEDRFFHHFXRW
     EMAIL_USE_SSL=True
     定义路由 创建视图函数 视图函数里面使用 send_mail方法



     注册的时候 默认情况下是非激活状态 只有去邮箱激活之后才可以变成激活状态
     并且可以登录 非激活状态是不可以登录的

     激活的时候有一些问题
     邮件的生命周期 一分钟之内激活有效 如果超过了一分钟，那么就提示链接已失效请重新发送邮件
     使用缓存 谁存储到缓存中 就是点击的时候链接不能生效==》让token不能获取到
     然后token对应的那个数据就找不到了
     然后 点击就不能生效了
     问题：什么时候设置缓存 在哪缓存
        发邮件的时候缓存  注册完有个缓存

     邮件的激活次数 只允许激活一次
     在什么情况下 不允许再次激活
     我们刚才做的是在缓存时间内可以一只激活
     所以我们要在缓存时间内激活一次之后就把缓存删除
     那么我们应该在哪个函数中去做呢



     注册好了之后干嘛呢
     点击连接 然后将当前账户的状态修改为激活状态

     注意：你是不是在注册之后才发送邮件
     注册之后 数据库有该数据  然后再发送邮件给用户 然后激活

     (5)表单提交得验证 （验证全部完成才能提交）
        我们之前得操作 就算用户名和密码都有问题我们还是可以注册
        所以我们要进行表单提交验证
        去js里面进行操作 使用form标签选择器里的submit
        方法 只有返回true才可以提交表单 如果返回false那么就
        不允许提交

     (6)密码的前端加密
     导入md5.js 使用md5进行加密
     注册和登录都要用
     所以在base_user.html里面引入md5.js
     然后前端加密在哪用呢？
     点击注册得时候加密 就是提交表单得时候


     (7)密码的后端加密
        django提供得加密方法
        make_password()


登录  (img标签 能发送请求 并且接收数据)
       验证码
       先验证验证码
       接下来 验证用户名和密码
       最后验证账户是否激活 激活后才可以登录

       如果验证码不正确 提示验证码不正确，请重新输入
       如果用户名不正确 提示用户名或者密码错误
       如果密码不正确 提示用户名或者密码错误
